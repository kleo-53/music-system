basePath: /api/v1
definitions:
  github_com_kleo-53_music-system_internal_controller_model.SongCommon:
    description: Minimal required data to represent a song
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  github_com_kleo-53_music-system_internal_controller_model.SongFilters:
    description: Used for filtering songs by fields below
    properties:
      group:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This server provides information about songs in music library
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Music library
  version: 0.0.1
paths:
  /api/v1/songs:
    get:
      consumes:
      - application/json
      description: Get info about all songs with pagination and optional filters
      parameters:
      - description: Filter by group name
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Filter by text content
        in: query
        name: text
        type: string
      - description: Filter by release date
        in: query
        name: release_date
        type: string
      - description: Filter by link
        in: query
        name: link
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of songs per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_kleo-53_music-system_internal_controller_model.SongCommon'
            type: array
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to get any songs data
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get songs info
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Add a new song to the system
      parameters:
      - description: New song data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_kleo-53_music-system_internal_controller_model.SongCommon'
      produces:
      - application/json
      responses:
        "200":
          description: Song was added
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to add song
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add song
      tags:
      - songs
  /api/v1/songs/{song_id}:
    delete:
      description: Delete a song by ID
      parameters:
      - description: Song ID
        in: path
        name: song_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Song was deleted
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete song
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete song
      tags:
      - songs
    get:
      consumes:
      - application/json
      description: Get text of song by ID with pagination
      parameters:
      - description: Song ID
        in: path
        name: song_id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of verses per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to get song text
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song text
      tags:
      - songs
    patch:
      consumes:
      - application/json
      description: Update song information by ID
      parameters:
      - description: Song ID
        in: path
        name: song_id
        required: true
        type: integer
      - description: Updated song data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_kleo-53_music-system_internal_controller_model.SongFilters'
      produces:
      - application/json
      responses:
        "200":
          description: Song was updated
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update song info
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update song
      tags:
      - songs
swagger: "2.0"
